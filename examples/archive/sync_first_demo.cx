print("ðŸš€ CX Pragmatic Sync-First Model");

class SimpleCognitive
{
    name: string;
    
    constructor(agentName)
    {
        this.name = agentName;
        print("ðŸ¤– Agent " + this.name + " created");
    }
    
    function processThought(input)
    {
        print("ðŸ§  Processing: " + input);
        
        // Use sync version - need result immediately  
        var thought = this.Think(input);
        
        print("ðŸ’­ Thought result: " + thought);
        
        // Fire-and-forget learning - use async version
        this.LearnAsync(input + " -> " + thought);
        print("ðŸ“š Learning queued in background");
        
        return thought;
    }
}

var agent = new SimpleCognitive("SyncFirst");
var result = agent.processThought("Hello world");
print("âœ… Final result: " + result);
