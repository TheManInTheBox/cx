// Simple proof that event handlers receive and execute events

print("🎯 EVENT HANDLER EXECUTION PROOF");
print("================================");

// Global event handler - should execute when events are emitted
on message.sent (payload)
{
    print("📨 HANDLER EXECUTED: Received message from " + payload.sender);
    print("📝 Message content: " + payload.content);
    print("⏰ Processed at: " + payload.timestamp);
    
    if (payload.priority == "high")
    {
        print("🚨 HIGH PRIORITY MESSAGE DETECTED!");
        emit priority.alert, { 
            originalSender: payload.sender,
            alertLevel: "critical" 
        };
    }
}

// Second handler to prove alert system works
on priority.alert (payload)
{
    print("🔴 ALERT HANDLER EXECUTED!");
    print("⚠️ Critical alert from: " + payload.originalSender);
    print("📊 Alert level: " + payload.alertLevel);
}

// Third handler for system events
on system.test (payload)
{
    print("🔧 SYSTEM HANDLER EXECUTED!");
    print("✅ System test successful: " + payload.testName);
}

print("🚀 Starting event emission test...");
print("");

// Emit test events to trigger handlers
print("📤 Emitting normal priority message...");
emit message.sent, {
    sender: "TestUser",
    content: "Hello from the event system!",
    timestamp: "2025-01-03T10:30:00",
    priority: "normal"
};

print("");
print("📤 Emitting high priority message...");
emit message.sent, {
    sender: "AdminUser",
    content: "System maintenance required immediately",
    timestamp: "2025-01-03T10:31:00", 
    priority: "high"
};

print("");
print("📤 Emitting system test event...");
emit system.test, {
    testName: "Event Handler Integration Test",
    status: "passed"
};

print("");
print("🎯 Event emission complete - handlers should have executed above!");
