// CX Language - Parallel Keyword Demonstration
// Phase 5 Feature: Parallel execution modifier

using textGen from "Cx.AI.TextGeneration";

// Regular function that can be parallelized
function computeTask(taskName)
{
    print("Computing: " + taskName);
    return "Result: " + taskName;
}

print("=== CX Parallel Keyword Syntax Demo ===");

// 1. Parallel execution of regular function calls
print("1. Parallel function calls:");
parallel computeTask("Task A");
parallel computeTask("Task B");

// 2. Parallel execution of AI service calls
print("2. Parallel AI service calls:");
parallel textGen.GenerateAsync("Write a haiku about coding", {
    temperature: 0.7,
    maxTokens: 100
});

parallel textGen.GenerateAsync("Write a limerick about computers", {
    temperature: 0.8,
    maxTokens: 80
});

// 3. Mixed parallel and sequential execution
print("3. Mixed execution patterns:");
computeTask("Sequential Task 1");
parallel computeTask("Parallel Task 1");
computeTask("Sequential Task 2");  
parallel computeTask("Parallel Task 2");

print("âœ… Parallel keyword syntax demonstration complete!");
print("Note: Currently executing synchronously - true parallel threading implementation pending");
