// Test basic class functionality - constructors, methods, field access
// Following Allman-style brackets as per CX coding standards

// Define a simple Person class
class Person
{
    // Fields - using correct syntax: name: type
    name: string;
    age: number;
    
    // Constructor
    constructor(personName, personAge)
    {
        name = personName;
        age = personAge;
        print("Person created: " + name + ", age " + age);
    }
    
    // Method to greet
    function greet()
    {
        print("Hello, my name is " + name);
        return "Greeting from " + name;
    }
    
    // Method to get age
    function getAge()
    {
        return age;
    }
    
    // Method to set age
    function setAge(newAge)
    {
        age = newAge;
        print("Age updated to: " + age);
    }
}

// Define a simple Vehicle class
class Vehicle
{
    model: string;
    year: number;
    
    constructor(carModel, carYear)
    {
        model = carModel;
        year = carYear;
        print("Vehicle created: " + model + " (" + year + ")");
    }
    
    function getInfo()
    {
        return model + " from " + year;
    }
    
    function start()
    {
        print("Starting the " + model + "...");
        return "Engine started";
    }
}

// Test the classes
print("=== Testing Basic Classes ===");

// Test Person class
print("\n--- Creating Person ---");
var alice = new Person("Alice", 25);

print("\n--- Calling Person methods ---");
var greeting = alice.greet();
print("Greeting result: " + greeting);

var currentAge = alice.getAge();
print("Current age: " + currentAge);

alice.setAge(26);

// Test Vehicle class  
print("\n--- Creating Vehicle ---");
var car = new Vehicle("Honda Civic", 2020);

print("\n--- Calling Vehicle methods ---");
var info = car.getInfo();
print("Vehicle info: " + info);

var startResult = car.start();
print("Start result: " + startResult);

print("\n=== Class Tests Complete ===");
