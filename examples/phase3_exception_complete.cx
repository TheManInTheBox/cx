// Phase 3: Complete Exception Handling Demonstration
// Tests all aspects of try/catch/throw with proper Allman-style brackets

function testExceptionHandling() 
{
    print("=== Phase 3: Exception Handling Testing ===");
    
    // Test 1: Basic try/catch with string exception
    print("Test 1: Basic try/catch with string");
    try 
    {
        print("In try block");
        throw "Something went wrong!";
        print("This should not print");
    }
    catch (e) 
    {
        print("Caught exception: " + e);
    }
    
    // Test 2: Try/catch with numeric exception
    print("Test 2: Try/catch with number");
    try 
    {
        var code = 404;
        throw code;
    }
    catch (error) 
    {
        print("Caught error code: " + error);
    }
    
    // Test 3: Try without exception (normal flow)
    print("Test 3: Try without exception");
    try 
    {
        var result = 10 + 20;
        print("Calculation result: " + result);
    }
    catch (e) 
    {
        print("This should not execute");
    }
    
    // Test 4: Nested try/catch
    print("Test 4: Nested try/catch");
    try 
    {
        print("Outer try block");
        try 
        {
            print("Inner try block");
            throw "Inner exception";
        }
        catch (inner) 
        {
            print("Inner catch: " + inner);
            throw "Outer exception from inner";
        }
    }
    catch (outer) 
    {
        print("Outer catch: " + outer);
    }
    
    // Test 5: Exception in function call
    print("Test 5: Exception in function call");
    try 
    {
        var result = riskyFunction();
        print("Function result: " + result);
    }
    catch (e) 
    {
        print("Function threw: " + e);
    }
    
    // Test 6: Exception with null
    print("Test 6: Exception with null");
    try 
    {
        throw null;
    }
    catch (e) 
    {
        print("Caught null exception: " + e);
    }
    
    return "All exception handling tests completed successfully!";
}

function riskyFunction() 
{
    print("In risky function");
    throw "Function operation failed!";
    return "This won't be reached";
}

function safeFunction() 
{
    print("In safe function");
    return "Safe operation completed";
}

// Execute the tests
print("Starting exception handling tests...");
var result = testExceptionHandling();
print("");
print("=== Final Result ===");
print(result);
print("");

// Test safe function call
print("Testing safe function:");
var safeResult = safeFunction();
print("Safe result: " + safeResult);

print("");
print("ðŸŽ‰ Phase 3 Exception Handling: COMPLETE!");
