// Test the exact same pattern as the failing debate demo but simpler


class TestAgent
{
    name: string;
    genService: object;
    speechService: object;
    
    constructor(name, gen, speech)
    {
        this.name = name;
        this.genService = gen;
        this.speechService = speech;
    }
    
    function testSpeak()
    {
        print("Testing AI call for " + this.name);
        var result = this.genService.GenerateAsync("Say hello", { maxTokens: 50 });
        print("AI result: " + result);
        this.speechService.SpeakAsync("Hello from " + this.name);
        print("TTS completed");
    }
}

print("=== Creating agents ===");
var agents = [
    new TestAgent("Agent1", textGen, tts),
    new TestAgent("Agent2", textGen, tts)
];

print("=== Testing method calls ===");
for (agent in agents)
{
    print("Calling testSpeak on " + agent.name);
    agent.testSpeak();
    print("Call completed");
}

print("All tests completed");
