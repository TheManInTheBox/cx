// Complete test of all 7 AI functions returning native CX objects
// This validates that all AI functions now return Dictionary<string, object> with consistent structure

// Test 1: Task function with object access
var taskResult = task("Create a simple greeting message");
print("Task result type: " + taskResult.type);
print("Task result status: " + taskResult.status);
print("Task result content: " + taskResult.result);
print("Task function metadata: " + taskResult.metadata.function);
print("Task timestamp: " + taskResult.metadata.timestamp);
print("Task execution time: " + taskResult.metadata.execution_time_ms + "ms");

// Test 2: Synthesize function with object access  
var synthesizeResult = synthesize("Combine data analysis with user feedback");
print("Synthesize result type: " + synthesizeResult.type);
print("Synthesize result status: " + synthesizeResult.status);
print("Synthesize result content: " + synthesizeResult.result);
print("Synthesize function metadata: " + synthesizeResult.metadata.function);

// Test 3: Reason function with object access
var reasonResult = reason("What are the benefits of structured data?");
print("Reason result type: " + reasonResult.type);
print("Reason result status: " + reasonResult.status);
print("Reason result content: " + reasonResult.result);
print("Reason function metadata: " + reasonResult.metadata.function);

// Test 4: Process function with object access
var processResult = process("user input", "web application context");
print("Process result type: " + processResult.type);
print("Process result status: " + processResult.status);
print("Process input: " + processResult.input);
print("Process context: " + processResult.context);
print("Process result content: " + processResult.result);
print("Process function metadata: " + processResult.metadata.function);

// Test 5: Generate function with object access
var generateResult = generate("Write a short story about AI");
print("Generate result type: " + generateResult.type);
print("Generate result status: " + generateResult.status);
print("Generate prompt: " + generateResult.prompt);
print("Generate result content: " + generateResult.result);
print("Generate function metadata: " + generateResult.metadata.function);

// Test 6: Embed function with object access
var embedResult = embed("Natural language processing concepts");
print("Embed result type: " + embedResult.type);
print("Embed result status: " + embedResult.status);
print("Embed text: " + embedResult.text);
print("Embed result content: " + embedResult.result);
print("Embed function metadata: " + embedResult.metadata.function);

// Test 7: Adapt function with object access
var adaptResult = adapt("Optimize this algorithm for better performance");
print("Adapt result type: " + adaptResult.type);
print("Adapt result status: " + adaptResult.status);
print("Adapt content: " + adaptResult.content);
print("Adapt result content: " + adaptResult.result);
print("Adapt function metadata: " + adaptResult.metadata.function);

// Test 8: Verify all functions returned objects (not strings)
print("\n=== Object Type Verification ===");
print("Task result is object: " + (taskResult.type == "task"));
print("Synthesize result is object: " + (synthesizeResult.type == "synthesize"));
print("Reason result is object: " + (reasonResult.type == "reason"));
print("Process result is object: " + (processResult.type == "process"));
print("Generate result is object: " + (generateResult.type == "generate"));
print("Embed result is object: " + (embedResult.type == "embed"));
print("Adapt result is object: " + (adaptResult.type == "adapt"));

// Test 9: Verify all functions have consistent metadata structure
print("\n=== Metadata Structure Verification ===");
print("Task has timestamp: " + (taskResult.metadata.timestamp != null));
print("Synthesize has timestamp: " + (synthesizeResult.metadata.timestamp != null));
print("Reason has timestamp: " + (reasonResult.metadata.timestamp != null));
print("Process has timestamp: " + (processResult.metadata.timestamp != null));
print("Generate has timestamp: " + (generateResult.metadata.timestamp != null));
print("Embed has timestamp: " + (embedResult.metadata.timestamp != null));
print("Adapt has timestamp: " + (adaptResult.metadata.timestamp != null));

print("\n=== NATIVE CX OBJECTS COMPLETE TEST PASSED ===");
print("All 7 AI functions now return native CX objects with consistent structure!");
