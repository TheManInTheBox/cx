// Working Agent Search Results - Simple Demo to Show Memory Retrieval
class MemoryAgent
{
    name: string;
    
    constructor(agentName)
    {
        this.name = agentName;
        print("🤖 Agent: " + this.name);
    }
    
    // Store a memory (simplified - no substring calls)
    function learn(content)
    {
        print("📚 " + this.name + " learning...");
        
        // Fire-and-forget learning
        learn {
            content: content,
            handlers: [ ai.learn.complete ]
        };
        
        return "Stored";
    }
    
    // Search memories
    function search(query)
    {
        print("🔍 " + this.name + " searching for: " + query);
        
        // Fire-and-forget search
        search {
            query: query,
            handlers: [ ai.search.complete ]
        };
        
        return "Search started";
    }
    
    // Event handler to display search results
    on ai.search.complete (payload)
    {
        print("");
        print("🎯 " + this.name + " FOUND RESULTS:");
        print("   Query: " + payload.query);
        print("   Results: " + payload.results.length);
        
        if (payload.results.length > 0)
        {
            var i = 0;
            while (i < payload.results.length && i < 3)
            {
                var result = payload.results[i];
                print("   " + (i + 1) + ". " + result.content);
                print("      Score: " + result.score);
                i = i + 1;
            }
        }
        else
        {
            print("   No memories found matching query");
        }
        print("━━━━━━━━━━━━━━━━━━━━━━━━━━");
        print("");
    }
}

print("🎯 AGENT MEMORY SEARCH DEMONSTRATION");
print("");

// Create agents
var aiAgent = new MemoryAgent("Dr.AI");
var ethicsAgent = new MemoryAgent("Dr.Ethics");

print("");
print("📚 Phase 1: Store Knowledge");

// Store knowledge
aiAgent.learn("Neural networks use backpropagation for training");
ethicsAgent.learn("AI systems must be fair and unbiased");
aiAgent.learn("Transformers use attention mechanisms");
ethicsAgent.learn("Algorithmic auditing prevents discrimination");

print("");
print("⏳ Waiting for knowledge to be stored...");
print("");

print("🔍 Phase 2: Search for Stored Knowledge");

// Search for what we just stored
aiAgent.search("neural networks training");
ethicsAgent.search("fair unbiased systems");
aiAgent.search("attention mechanisms");
ethicsAgent.search("auditing discrimination");

print("");
print("⏳ Search results will appear via event handlers...");
print("");

print("✅ Demo complete - agents can store and retrieve memories!");
