// ========================================================================
// CX Language - Complete Current Features Demo
// This file demonstrates all currently working language features
// ========================================================================

print("=== CX Language - Complete Current Features Demo ===");

// ========================================================================
// 1. VARIABLES AND DATA TYPES
// ========================================================================

print("\n--- 1. Variables and Data Types ---");

// Basic variable declarations with var keyword
var message = "Hello, CX Language!";
var count = 42;
var price = 19.99;
var isActive = true;
var nothing = null;

print("String: " + message);
print("Integer: " + count);
print("Float: " + price);
print("Boolean: " + isActive);
print("Null: " + nothing);

// Variable reassignment (no var keyword)
count = 100;
message = "Updated message";
isActive = false;

print("Updated count: " + count);
print("Updated message: " + message);
print("Updated boolean: " + isActive);

// ========================================================================
// 2. ARITHMETIC OPERATIONS
// ========================================================================

print("\n--- 2. Arithmetic Operations ---");

var a = 20;
var b = 8;

print("a = " + a + ", b = " + b);

var sum = a + b;
var difference = a - b;
var product = a * b;
var quotient = a / b;
var remainder = a % b;

print("Addition (a + b): " + sum);
print("Subtraction (a - b): " + difference);
print("Multiplication (a * b): " + product);
print("Division (a / b): " + quotient);
print("Modulo (a % b): " + remainder);

// ========================================================================
// 3. COMPARISON OPERATIONS
// ========================================================================

print("\n--- 3. Comparison Operations ---");

var x = 10;
var y = 15;

print("x = " + x + ", y = " + y);

var equal = x == y;
var notEqual = x != y;
var lessThan = x < y;
var greaterThan = x > y;
var lessEqual = x <= y;
var greaterEqual = x >= y;

print("Equal (x == y): " + equal);
print("Not Equal (x != y): " + notEqual);
print("Less Than (x < y): " + lessThan);
print("Greater Than (x > y): " + greaterThan);
print("Less Equal (x <= y): " + lessEqual);
print("Greater Equal (x >= y): " + greaterEqual);

// ========================================================================
// 4. LOGICAL OPERATIONS
// ========================================================================

print("\n--- 4. Logical Operations ---");

var flag1 = true;
var flag2 = false;

print("flag1 = " + flag1 + ", flag2 = " + flag2);

var logicalAnd = flag1 && flag2;
var logicalOr = flag1 || flag2;
var logicalNot1 = !flag1;
var logicalNot2 = !flag2;

print("AND (flag1 && flag2): " + logicalAnd);
print("OR (flag1 || flag2): " + logicalOr);
print("NOT flag1 (!flag1): " + logicalNot1);
print("NOT flag2 (!flag2): " + logicalNot2);

// Complex logical expressions
var complex1 = (x > 5) && (y < 20);
var complex2 = (x == 10) || (y == 10);

print("Complex 1 ((x > 5) && (y < 20)): " + complex1);
print("Complex 2 ((x == 10) || (y == 10)): " + complex2);

// ========================================================================
// 5. ASSIGNMENT OPERATORS
// ========================================================================

print("\n--- 5. Assignment Operators ---");

var num = 10;
print("Initial value: " + num);

num += 5;
print("After += 5: " + num);

num -= 3;
print("After -= 3: " + num);

num *= 2;
print("After *= 2: " + num);

num /= 4;
print("After /= 4: " + num);

// ========================================================================
// 6. CONTROL FLOW - IF/ELSE
// ========================================================================

print("\n--- 6. Control Flow - If/Else ---");

var score = 85;

if (score >= 90)
{
    print("Grade: A");
}
else if (score >= 80)
{
    print("Grade: B");
}
else if (score >= 70)
{
    print("Grade: C");
}
else
{
    print("Grade: F");
}

// Nested if statements
var weather = "sunny";
var temperature = 25;

if (weather == "sunny")
{
    if (temperature > 20)
    {
        print("Perfect weather for outdoor activities!");
    }
    else
    {
        print("Sunny but a bit cold.");
    }
}
else
{
    print("Not ideal weather.");
}

// ========================================================================
// 7. CONTROL FLOW - WHILE LOOPS
// ========================================================================

print("\n--- 7. Control Flow - While Loops ---");

var counter = 0;
print("Counting up to 5:");

while (counter < 5)
{
    print("Counter: " + counter);
    counter = counter + 1;
}

print("While loop complete!");

// Countdown example
var countdown = 3;
print("Countdown:");

while (countdown > 0)
{
    print(countdown);
    countdown = countdown - 1;
}

print("Blast off!");

// ========================================================================
// 8. CONTROL FLOW - FOR-IN LOOPS
// ========================================================================

print("\n--- 8. Control Flow - For-In Loops ---");

var numbers = [1, 2, 3, 4, 5];
print("Array contents using for-in:");

for (var num in numbers)
{
    print("Number: " + num);
}

var names = ["Alice", "Bob", "Charlie"];
print("Names array:");

for (var name in names)
{
    print("Name: " + name);
}

// ========================================================================
// 9. FUNCTIONS
// ========================================================================

print("\n--- 9. Functions ---");

// Simple function declaration
function sayHello()
{
    print("Hello from a function!");
}

// Function with parameters
function greetPerson(name)
{
    print("Hello, " + name + "!");
}

// Function with multiple parameters
function calculateSum(a, b)
{
    var result = a + b;
    print("Sum of " + a + " and " + b + " is: " + result);
}

// Function with local variables
function demonstrateScope()
{
    var localVar = "I'm local to this function";
    print("Local variable: " + localVar);
}

// Call the functions
sayHello();
greetPerson("Alice");
calculateSum(10, 20);
demonstrateScope();

// ========================================================================
// 10. EXCEPTION HANDLING
// ========================================================================

print("\n--- 10. Exception Handling ---");

// Simple try-catch
try
{
    print("Attempting risky operation...");
    var result = 10 / 0;  // This might cause issues
    print("Operation completed successfully");
}
catch (error)
{
    print("Caught an error: " + error);
}

// Try-catch with throw
function validateAge(age)
{
    if (age < 0)
    {
        throw "Age cannot be negative";
    }
    if (age > 150)
    {
        throw "Age seems unrealistic";
    }
    print("Valid age: " + age);
}

try
{
    validateAge(25);
    validateAge(-5);
}
catch (error)
{
    print("Validation error: " + error);
}

// ========================================================================
// 11. OBJECT LITERALS
// ========================================================================

print("\n--- 11. Object Literals ---");

var person = {
    name: "John Doe",
    age: 30,
    city: "New York",
    isEmployed: true
};

print("Person name: " + person.name);
print("Person age: " + person.age);
print("Person city: " + person.city);
print("Person employed: " + person.isEmployed);

// Object with string keys
var config = {
    "server-url": "https://api.example.com",
    "timeout": 5000,
    "retry-count": 3
};

print("Server URL: " + config["server-url"]);
print("Timeout: " + config["timeout"]);

// ========================================================================
// 12. ARRAY LITERALS
// ========================================================================

print("\n--- 12. Array Literals ---");

var colors = ["red", "green", "blue"];
var scores = [85, 92, 78, 96, 88];
var mixed = [1, "two", true, null];

print("First color: " + colors[0]);
print("Second color: " + colors[1]);
print("Third color: " + colors[2]);

print("First score: " + scores[0]);
print("Last score: " + scores[4]);

print("Mixed array - number: " + mixed[0]);
print("Mixed array - string: " + mixed[1]);
print("Mixed array - boolean: " + mixed[2]);
print("Mixed array - null: " + mixed[3]);

// ========================================================================
// 13. STRING OPERATIONS
// ========================================================================

print("\n--- 13. String Operations ---");

var firstName = "John";
var lastName = "Doe";
var fullName = firstName + " " + lastName;

print("Full name: " + fullName);

var greeting = "Hello, " + fullName + "!";
print("Greeting: " + greeting);

var sentence = "The answer is " + 42;
print("Mixed string: " + sentence);

// ========================================================================
// SUMMARY
// ========================================================================

print("\n=== Demo Complete ===");
print("All core CX language features demonstrated successfully!");
print("Ready for Phase 4: AI Integration and Advanced Features");
