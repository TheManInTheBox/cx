// Testing interfaces in Phase 3
print("=== Interface Test ===");

// Test 1: Define an interface
interface IDrawable 
{
    draw() -> string;
    getArea() -> number;
}

// Test 2: Class implementing interface
class Rectangle implements IDrawable 
{
    constructor(width, height) 
    {
        this.width = width;
        this.height = height;
    }
    
    function draw() 
    {
        return "Drawing rectangle " + this.width + "x" + this.height;
    }
    
    function getArea() 
    {
        return this.width * this.height;
    }
}

// Test 3: Another class implementing the same interface
class Circle implements IDrawable 
{
    constructor(radius) 
    {
        this.radius = radius;
    }
    
    function draw() 
    {
        return "Drawing circle with radius " + this.radius;
    }
    
    function getArea() 
    {
        return 3.14159 * this.radius * this.radius;
    }
}

// Test 4: Use interface polymorphically
function testShape(shape) 
{
    print("Shape: " + shape.draw());
    print("Area: " + shape.getArea());
}

// Test the interface implementation
var rect = new Rectangle(10, 5);
var circle = new Circle(3);

testShape(rect);
testShape(circle);

print("=== Interface Test Complete ===");
