// ========================================================================
// CX Language - Comprehensive Language Feature Demo
// Tests ALL confirmed working language features in one script
// ========================================================================

print("=== CX Language - Comprehensive Feature Demonstration ===");

// ========================================================================
// 1. VARIABLES AND DATA TYPES
// ========================================================================
print("\n--- 1. Variables and Data Types ---");

var name = "CX Language";
var version = 42;
var isStable = true;
var nullValue = null;

print("String variable: " + name);
print("Integer variable: " + version);
print("Boolean variable: " + isStable);
print("Null variable: " + nullValue);

// ========================================================================
// 2. ARITHMETIC OPERATIONS
// ========================================================================
print("\n--- 2. Arithmetic Operations ---");

var a = 20;
var b = 7;

var sum = a + b;
var difference = a - b;
var product = a * b;
var quotient = a / b;
var remainder = a % b;

print("a = " + a + ", b = " + b);
print("Addition (a + b): " + sum);
print("Subtraction (a - b): " + difference);
print("Multiplication (a * b): " + product);
print("Division (a / b): " + quotient);
print("Modulo (a % b): " + remainder);

// ========================================================================
// 3. COMPARISON OPERATIONS
// ========================================================================
print("\n--- 3. Comparison Operations ---");

var x = 15;
var y = 10;
var z = 15;

print("x = " + x + ", y = " + y + ", z = " + z);
print("Equal (x == y): " + (x == y));
print("Equal (x == z): " + (x == z));
print("Not Equal (x != y): " + (x != y));
print("Less Than (y < x): " + (y < x));
print("Greater Than (x > y): " + (x > y));
print("Less Equal (y <= x): " + (y <= x));
print("Greater Equal (x >= z): " + (x >= z));

// ========================================================================
// 4. LOGICAL OPERATIONS
// ========================================================================
print("\n--- 4. Logical Operations ---");

var flag1 = true;
var flag2 = false;
var flag3 = true;

print("flag1 = " + flag1 + ", flag2 = " + flag2 + ", flag3 = " + flag3);
print("AND (flag1 && flag2): " + (flag1 && flag2));
print("AND (flag1 && flag3): " + (flag1 && flag3));
print("OR (flag1 || flag2): " + (flag1 || flag2));
print("OR (flag2 || false): " + (flag2 || false));
print("NOT (!flag1): " + (!flag1));
print("NOT (!flag2): " + (!flag2));

// ========================================================================
// 5. CONTROL FLOW - IF/ELSE STATEMENTS
// ========================================================================
print("\n--- 5. Control Flow - If/Else Statements ---");

var score = 85;

if (score >= 90)
{
    print("Excellent! Grade: A");
}
else if (score >= 80)
{
    print("Good! Grade: B");
}
else if (score >= 70)
{
    print("Average. Grade: C");
}
else
{
    print("Failed. Grade: F");
}

// ========================================================================
// 6. FUNCTIONS
// ========================================================================
print("\n--- 6. Functions ---");

function sayHello()
{
    print("Hello from a parameterless function!");
    return "Hello returned";
}

var greeting = sayHello();
print("Function returned: " + greeting);

function greet(personName)
{
    print("Hello, " + personName + "!");
    return "Greeted " + personName;
}

var result1 = greet("Alice");
print("Greet result: " + result1);

function calculate(num1, num2, operation)
{
    var calcResult = 0;
    
    if (operation == "add")
    {
        calcResult = num1 + num2;
    }
    else if (operation == "subtract")
    {
        calcResult = num1 - num2;
    }
    else if (operation == "multiply")
    {
        calcResult = num1 * num2;
    }
    else if (operation == "divide")
    {
        calcResult = num1 / num2;
    }
    
    return calcResult;
}

var addResult = calculate(10, 5, "add");
var subResult = calculate(10, 5, "subtract");
var mulResult = calculate(10, 5, "multiply");
var divResult = calculate(10, 5, "divide");

print("10 + 5 = " + addResult);
print("10 - 5 = " + subResult);
print("10 * 5 = " + mulResult);
print("10 / 5 = " + divResult);

// ========================================================================
// 7. ARRAYS
// ========================================================================
print("\n--- 7. Arrays ---");

var numbers = [1, 2, 3, 4, 5];
var fruits = ["apple", "banana", "cherry"];

print("Numbers array:");
print("  First: " + numbers[0]);
print("  Second: " + numbers[1]);
print("  Third: " + numbers[2]);

print("Fruits array:");
print("  First fruit: " + fruits[0]);
print("  Second fruit: " + fruits[1]);
print("  Third fruit: " + fruits[2]);

// ========================================================================
// 8. FOR-IN LOOPS
// ========================================================================
print("\n--- 8. For-In Loops ---");

print("Iterating through numbers array:");
for (var num in numbers)
{
    print("  Number: " + num);
}

print("Iterating through fruits array:");
for (var fruit in fruits)
{
    print("  Fruit: " + fruit);
}

// ========================================================================
// 9. OBJECTS
// ========================================================================
print("\n--- 9. Objects ---");

var person = {
    name: "Alice Johnson",
    age: 30,
    active: true
};

print("Person object:");
print("  Name: " + person.name);
print("  Age: " + person.age);
print("  Active: " + person.active);

// ========================================================================
// 10. STRING OPERATIONS
// ========================================================================
print("\n--- 10. String Operations ---");

var firstName = "John";
var lastName = "Doe";
var userAge = 25;

var fullName = firstName + " " + lastName;
var introduction = "Hello, I am " + fullName + " and I am " + userAge + " years old.";

print("First name: " + firstName);
print("Last name: " + lastName);
print("Full name: " + fullName);
print("Introduction: " + introduction);

// ========================================================================
// 11. AI SERVICE IMPORTS
// ========================================================================
print("\n--- 11. AI Service Architecture ---");

using textGen from "Cx.AI.TextGeneration";
using chatBot from "Cx.AI.ChatCompletion"; 
using embeddings from "Cx.AI.TextEmbeddings";
using imageGen from "Cx.AI.TextToImage";

print("AI Services imported successfully:");
print("  textGen (Text Generation)");
print("  chatBot (Chat Completion)");
print("  embeddings (Text Embeddings)");
print("  imageGen (Text to Image)");
print("NOTE: AI service calls require Azure OpenAI configuration.");

// ========================================================================
// FINAL STATUS REPORT
// ========================================================================
print("\n=== COMPREHENSIVE LANGUAGE TEST COMPLETE ===");
print("All confirmed working language features tested successfully!");
print("\nFeatures demonstrated:");
print("  Variables and data types (string, integer, boolean, null)");
print("  Arithmetic operations (+, -, *, /, %)");
print("  Comparison operations (==, !=, <, >, <=, >=)");
print("  Logical operations (&&, ||, !)");
print("  Control flow (if/else statements)");
print("  Functions (parameters, return values, local scope)");
print("  Arrays (literals, indexing, iteration)");
print("  For-in loops (array iteration)");
print("  Objects (literals, property access)");
print("  String operations (concatenation)");
print("  AI service architecture (modular imports)");
print("\nCX Language core features are working correctly!");
