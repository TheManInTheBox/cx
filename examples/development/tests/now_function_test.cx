// Simple test for built-in now() function
conscious TimestampTest
{
    realize(self: conscious)
    {
        print("⏰ Testing now() function: " + self.name);
        learn self;
        emit test.ready { name: self.name };
    }

    on system.test.timestamp (event)
    {
        print("🕐 Testing built-in now() function...");
        
        // Test basic timestamp functionality  
        var currentTime = now();
        print("📅 Current timestamp: " + currentTime);
        
        // Enhanced timestamp testing with consciousness validation
        print("🧠 Consciousness validation: " + typeof(currentTime));
        print("⚡ Testing timestamp arithmetic: " + (currentTime + 1000));
        
        // Test timestamp in event emission with enhanced payload
        emit timestamp.verified {
            time: currentTime,
            test: "now_function",
            validation: "consciousness_aware",
            platform: "cx_language_v1_0"
        };
    }

    on timestamp.verified (event)
    {
        print("✅ Timestamp verified: " + event.time);
        print("✅ Built-in now() function working correctly");
        print("🎯 Validation type: " + event.validation);
        print("🚀 Platform: " + event.platform);
        
        // Demonstrate consciousness-aware timestamp processing
        print("🧠 Consciousness timestamp delta: " + (now() - event.time) + "ms");
        
        // Signal readiness for parallel handler testing
        emit system.ready.for.parallel { 
            timestamp_validation: "complete",
            consciousness_platform: "operational",
            ready_for_revolution: true
        };
    }
}

on system.start (event)
{
    print("🚀 Testing Built-in now() Function");
    
    var test = new TimestampTest({ name: "TimestampTest" });
    
    emit system.test.timestamp;
}
