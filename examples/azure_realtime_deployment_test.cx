// Azure OpenAI Realtime API - gpt-4o-mini-realtime-preview Deployment Test
// Testing the newly configured realtime model deployment

print("=== 🚀 GPT-4O-MINI-REALTIME-PREVIEW DEPLOYMENT TEST 🚀 ===");

class RealtimeDeploymentTestAgent
{
    name: string = "DeploymentTester";
    deploymentName: string = "gpt-4o-mini-realtime-preview";
    
    function testNewDeployment()
    {
        print("🧪 Testing gpt-4o-mini-realtime-preview deployment...");
        print("✅ Configuration updated: RealtimeDeploymentName = gpt-4o-mini-realtime-preview");
        print("✅ Endpoint: wss://aaron-md9fkzv3-eastus2.cognitiveservices.azure.com");
        print("✅ API Version: 2024-10-01-preview");
        print("🔄 Attempting connection to new deployment...");
        
        // Test connection to new deployment
        emit realtime.connect { 
            test: "deployment_validation",
            deployment: this.deploymentName,
            timestamp: "2025-07-22"
        };
        
        print("📡 Connection request sent to Azure OpenAI Realtime API");
    }
    
    on realtime.connected (event)
    {
        print("🎉 SUCCESS! Connected to gpt-4o-mini-realtime-preview!");
        print("✅ Deployment is working correctly");
        print(event);
        
        // Test session creation with new model
        emit realtime.session.create {
            deployment: this.deploymentName,
            test: "session_validation"
        };
    }
    
    on realtime.session.created (event)
    {
        print("🎉 SESSION CREATED! gpt-4o-mini-realtime-preview is fully operational!");
        print(event);
        
        // Test sending a message
        emit realtime.text.send {
            text: "Hello! This is a test of the gpt-4o-mini-realtime-preview deployment. Please respond to confirm the model is working.",
            deployment: this.deploymentName
        };
    }
    
    on realtime.text.response (event)
    {
        print("🎉 TEXT RESPONSE RECEIVED! Model is responding correctly!");
        print("Response:");
        print(event);
        
        emit deployment.success {
            model: this.deploymentName,
            status: "fully_operational",
            timestamp: "2025-07-22"
        };
    }
    
    on realtime.session.error (event)
    {
        print("⚠️ Deployment test encountered an issue:");
        print(event);
        
        if (event.error && event.error.indexOf("404") >= 0)
        {
            print("❌ DEPLOYMENT NOT FOUND: gpt-4o-mini-realtime-preview");
            print("📋 NEXT STEPS:");
            print("1. Go to Azure Portal");
            print("2. Navigate to your Azure OpenAI resource: aaron-md9fkzv3-eastus2");
            print("3. Click 'Model deployments'");
            print("4. Deploy model: gpt-4o-mini-realtime-preview");
            print("5. Set deployment name: gpt-4o-mini-realtime-preview");
        }
        else if (event.error && event.error.indexOf("401") >= 0)
        {
            print("❌ AUTHENTICATION ERROR: Check your API key");
        }
        else if (event.error && event.error.indexOf("403") >= 0)
        {
            print("❌ PERMISSION ERROR: Model not available in your region");
        }
        else
        {
            print("❌ OTHER ERROR: Check Azure OpenAI service status");
        }
    }
    
    on deployment.success (event)
    {
        print("🏆 DEPLOYMENT SUCCESS! gpt-4o-mini-realtime-preview is ready for production!");
        print("✅ Configuration: COMPLETE");
        print("✅ Connection: WORKING");
        print("✅ Sessions: WORKING");
        print("✅ Text Processing: WORKING");
        print("🎯 Azure OpenAI Realtime API is fully operational!");
    }
}

// Create and test the deployment
var deploymentTester = new RealtimeDeploymentTestAgent();

print("\n🔧 CONFIGURATION STATUS:");
print("✅ Realtime Endpoint: wss://aaron-md9fkzv3-eastus2.cognitiveservices.azure.com");
print("✅ Deployment Name: gpt-4o-mini-realtime-preview"); 
print("✅ API Version: 2024-10-01-preview");

print("\n🧪 STARTING DEPLOYMENT TEST:");
deploymentTester.testNewDeployment();

print("\n⏳ Waiting for Azure OpenAI response...");
