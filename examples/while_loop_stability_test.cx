// While Loop Stability Testing - Comprehensive Test Suite
// Testing various while loop scenarios to identify runtime issues

print("=== While Loop Stability Test Suite ===");

// Test 1: Basic while loop with simple counter
print("Test 1: Basic Counter Loop");
var counter = 0;
while (counter < 5)
{
    print("Counter: " + counter);
    counter += 1;
}
print("Final counter: " + counter);

// Test 2: While loop with complex condition
print("\nTest 2: Complex Condition");
var x = 10;
var y = 2;
while (x > y && y < 8)
{
    print("x: " + x + ", y: " + y);
    x -= 1;
    y += 1;
}

// Test 3: Nested while loops
print("\nTest 3: Nested While Loops");
var outer = 0;
while (outer < 3)
{
    print("Outer loop: " + outer);
    var inner = 0;
    while (inner < 2)
    {
        print("  Inner loop: " + inner);
        inner += 1;
    }
    outer += 1;
}

// Test 4: While loop with break condition (simulated)
print("\nTest 4: Early Exit Simulation");
var count = 0;
var found = false;
while (count < 10 && !found)
{
    print("Searching... count: " + count);
    if (count == 3)
    {
        found = true;
        print("Found target at count 3!");
    }
    count += 1;
}

// Test 5: While loop with array processing
print("\nTest 5: Array Processing");
var numbers = [1, 2, 3, 4, 5];
var index = 0;
var sum = 0;
while (index < 5)  // Using literal instead of numbers.length for now
{
    sum += numbers[index];
    print("Added " + numbers[index] + ", sum now: " + sum);
    index += 1;
}

// Test 6: While loop with function calls
print("\nTest 6: Function Calls in Loop");
function isEven(num)
{
    return (num % 2) == 0;
}

var num = 2;
while (num <= 8)
{
    if (isEven(num))
    {
        print(num + " is even");
    }
    else
    {
        print(num + " is odd");
    }
    num += 2;
}

// Test 7: Edge case - immediate false condition
print("\nTest 7: Immediate False Condition");
var never = 5;
while (never < 5)
{
    print("This should never execute");
    never += 1;
}
print("Correctly skipped the loop");

// Test 8: While loop with string manipulation
print("\nTest 8: String Processing");
var text = "hello";
var i = 0;
var result = "";
while (i < 5)  // Using literal instead of text.length
{
    result += text[i];  // This might need investigation
    i += 1;
}
print("Text processing result: " + result);

print("\n=== While Loop Test Suite Complete ===");
