// Testing the self keyword for functions

function factorial(n) {
    if (n <= 1) {
        return 1;
    }
    return n * factorial(n - 1);
}

// Using the self keyword to get the function's source code
function getSelfCode() {
    print("My own code: " + self);
    return self;
}

// Using self in an AI function call to optimize a function
function inefficientFunction(x) {
    // This is deliberately inefficient
    let result = 0;
    for (let i = 1; i <= x; i++) {
        result = result + i;
    }
    return result;
}

function optimizeMe() {
    // Using task with object literals as parameter
    let optimized = task(self, {
        instruction: "Optimize this function to use a mathematical formula instead of a loop",
        model: "gpt-4",
        temperature: 0.2
    });
    
    print("Optimized version:");
    print(optimized);
    return optimized;
}

// Test basic self reference
let code = getSelfCode();
print("Function code retrieved: " + code);

// Test self optimization
print("Running optimization example...");
optimizeMe();
