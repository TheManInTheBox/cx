// IS FIRING MINIMAL TEST
// This is a simplified test to ensure the basic 'is' statement syntax is parsed correctly.

class MinimalTester
{
    constructor()
    {
        print("--- MINIMAL IS TEST STARTING ---");

        // Test 1: A condition that should evaluate to true.
        is {
            context: "A simple true condition.",
            evaluate: "1 equals 1",
            handlers: [ test.passed ]
        };

        // Test 2: A condition that should evaluate to false.
        is {
            context: "A simple false condition.",
            evaluate: "1 equals 2",
            handlers: [ test.failed ]
        };

        await {
            reason: "Allowing events to process.",
            minDurationMs: 1000,
            maxDurationMs: 1000,
            handlers: [ system.shutdown ]
        };
    }

    on test.passed (event)
    {
        print("✅ SUCCESS: The 'is' statement for a TRUE condition fired the correct event.");
    }

    on test.failed (event)
    {
        print("❌ FAILURE: The 'is' statement for a FALSE condition incorrectly fired an event.");
    }
}

on system.shutdown (event)
{
    print("--- MINIMAL IS TEST COMPLETE ---");
}

var tester = new MinimalTester();
