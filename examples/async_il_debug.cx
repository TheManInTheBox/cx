print("=== Async IL Generation Debug ===");

class AsyncTestAgent
{
    name: string;
    
    constructor(agentName)
    {
        this.name = agentName;
        print("Created async test agent: " + this.name);
    }
    
    // Working sync method for comparison
    function syncTest()
    {
        return "Sync test: " + this.name;
    }
    
    // Simple async method WITHOUT await - should work with Task.FromResult
    async function simpleAsync()
    {
        print(this.name + " simple async method");
        return "Simple async result: " + this.name;
    }
    
    // Complex async method WITH await - this is where the IL issue occurs
    async function complexAsync(prompt)
    {
        print(this.name + " complex async with await");
        
        try {
            var thought = await this.Think(prompt);
            return "Complex result: " + thought;
        } catch (e) {
            return "Error: " + e.toString();
        }
    }
}

print("Creating async test agent...");
var agent = new AsyncTestAgent("DebugAgent");

print("Testing sync method...");
var syncResult = agent.syncTest();
print("Sync result: " + syncResult);

print("Testing simple async method...");
try {
    var simpleResult = await agent.simpleAsync();
    print("Simple async result: " + simpleResult);
} catch (e) {
    print("Simple async error: " + e.toString());
}

print("Testing complex async method...");
try {
    var complexResult = await agent.complexAsync("test prompt");
    print("Complex async result: " + complexResult);
} catch (e) {
    print("Complex async error: " + e.toString());
}

print("=== Async IL Generation Debug Complete ===");
