// Vector Database Delayed Search Test  
// Test search after documents have time to be fully embedded

print("⏰ Testing Vector Database with Embedding Processing Delays\n");

// Simplified event handlers
on ai.learning.complete (payload) 
{
    print("✅ LEARNED: " + payload.documentId);
}

on ai.search.complete (payload) 
{
    print("🔍 SEARCHED: '" + payload.query + "' → " + payload.resultsCount + " results");
    
    if (payload.resultsCount > 0) 
    {
        print("   📖 TOP RESULT: " + payload.topResult);
    }
}

class DelayedTester
{
    name: string;
    
    constructor(agentName: string) 
    {
        this.name = agentName;
    }
    
    function testWithSimpleContent() 
    {
        print("📝 Learning very simple test content...");
        
        // Learn extremely simple content that should be easy to find
        this.Learn("Hello World Test");
        this.Learn("Red Car Fast");  
        this.Learn("Blue Sky Beautiful");
        
        print("⏳ Learning dispatched - searches should find nothing initially");
        
        // Search immediately (should find nothing)
        this.Search("Hello World");
        this.Search("Red Car");
        this.Search("Blue Sky");
        
        print("✅ All operations dispatched - watch the timing!");
    }
}

var tester = new DelayedTester("DelayTester");

print("🧪 Starting Delayed Search Test");
tester.testWithSimpleContent();

print("\n🔑 Watch the learning vs searching timing patterns...\n");
