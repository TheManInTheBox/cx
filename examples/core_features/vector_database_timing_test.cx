// Vector Database Timing Test
// Test if there's a delay between learning and searchability

print("🔍 Vector Database Timing Test - Learning then Searching with Delays\n");

// Learning detection
on ai.learning.complete (payload) 
{
    print("✅ LEARNED: " + payload.documentId + " (Length: " + payload.contentLength + ")");
}

// Search detection  
on ai.search.complete (payload) 
{
    print("🔍 SEARCHED: '" + payload.query + "' - Found: " + payload.resultsCount + " results");
}

class TimingTester
{
    name: string;
    
    constructor(agentName: string) 
    {
        this.name = agentName;
    }
    
    function testImmediateSearch()
    {
        print("📚 Step 1: Learning simple content...");
        
        // Learn something very specific and searchable
        this.Learn({
            topic: "Blue Elephant Dancing",
            description: "A magnificent blue elephant is dancing in the moonlight with graceful movements.",
            keywords: "blue elephant dance moonlight graceful",
            testId: "timing_test_001"
        });
        
        print("🔍 Step 2: Searching immediately (should find nothing if indexing takes time)...");
        
        // Search immediately for exact content
        this.Search("blue elephant dancing moonlight");
        this.Search("magnificent blue elephant");
        this.Search("dancing graceful movements");
        
        print("   ✅ Immediate searches dispatched");
        
        // Try a delayed search by learning more content first
        print("📚 Step 3: Learning more content to create processing delay...");
        
        this.Learn({
            topic: "Red Tiger Running", 
            description: "A fierce red tiger is running through the jungle at incredible speed.",
            keywords: "red tiger running jungle speed",
            testId: "timing_test_002"
        });
        
        this.Learn({
            topic: "Green Frog Swimming",
            description: "A small green frog is swimming peacefully in a crystal clear pond.",
            keywords: "green frog swimming pond crystal clear",
            testId: "timing_test_003"
        });
        
        print("🔍 Step 4: Searching again after more learning operations...");
        
        // Search again - maybe the first documents are now indexed
        this.Search("blue elephant dancing");
        this.Search("red tiger running jungle");
        this.Search("green frog swimming pond");
        
        print("   ✅ All timing tests dispatched - watch for search results!");
    }
}

var tester = new TimingTester("TimingTester");

print("🧪 Starting Vector Database Timing Test");
tester.testImmediateSearch();

print("\n🔑 Press any key to continue and watch for learning/search event patterns...\n");
