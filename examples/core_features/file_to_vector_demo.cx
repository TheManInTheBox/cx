// File to Vector Cache Demo
// Reads file contents, stores in vector cache, and prints contents

conscious FileVectorDemo {
    realize(self: conscious) {
        learn self;
        
        print("📖 FILE TO VECTOR CACHE DEMO STARTING");
        print("=====================================");
        
        // Create a test file with sample content
        var testFile = "vector_cache_test.txt";
        var fileContent = "This is sample content for vector storage.\nIt contains multiple lines of text.\nThis text will be stored in the vector cache for retrieval.\nVector storage enables semantic search and AI processing.";
        
        print("📝 Creating test file: " + testFile);
        writeFile(testFile, fileContent);
        
        // Read the file contents
        print("\n📖 Reading file contents...");
        var readContent = readFile(testFile);
        
        print("📄 File Contents:");
        print("================");
        print(readContent);
        
        // Store file contents in vector cache using learn service
        print("\n🧠 Storing file contents in vector cache...");
        learn {
            data: readContent,
            category: "file_content",
            source: testFile,
            metadata: {
                filename: testFile,
                fileSize: getFileSize(testFile),
                timestamp: getLastWriteTime(testFile),
                contentType: "text"
            }
        };
        
        // Wait for vector storage to complete
        print("⏳ Waiting for vector storage to complete...");
        
        // Also store individual lines for more granular search
        var lines = readContent.split("\n");
        var lineNumber = 1;
        
        print("📋 Storing individual lines in vector cache...");
        for (var line in lines) {
            if (line.trim() != "") {
                learn {
                    data: line,
                    category: "file_line",
                    source: testFile + ":line" + lineNumber,
                    metadata: {
                        filename: testFile,
                        lineNumber: lineNumber,
                        lineContent: line
                    }
                };
                print("  - Line " + lineNumber + " stored: " + line);
                lineNumber = lineNumber + 1;
            }
        }
        
        print("\n✅ File contents successfully stored in vector cache!");
        print("📊 Summary:");
        print("  - File: " + testFile);
        print("  - Size: " + getFileSize(testFile) + " bytes");
        print("  - Lines stored: " + (lineNumber - 1));
        print("  - Full content stored as single vector");
        print("  - Individual lines stored as separate vectors");
        
        // Clean up test file
        print("\n🗑️ Cleaning up test file...");
        deleteFile(testFile);
        print("✅ Test file deleted");
        
        print("\n🎉 VECTOR CACHE DEMO COMPLETE!");
        print("==============================");
        print("The file contents are now stored in the vector database");
        print("and can be retrieved using semantic search queries.");
    }
}

// Create and run the demo
var demo = new FileVectorDemo({});
print("🧠 File to Vector Cache demo execution finished!");
