///
/// Vector Search Debug Demo - Issue #256 Debugging
/// Focused test to debug vector.search.vector functionality
///

conscious VectorSearchDebugDemo {
    realize() {
        emit system.console.write {
            text: "üîß Vector Search Debug Demo - Issue #256"
        };
        
        emit system.console.write {
            text: "Step 1: Adding a test record first..."
        };

        // Add a simple test record first
        emit vector.add.text {
            text: "Debug test record for vector search",
            metadata: { debug: true, test_phase: "setup" },
            handlers: [ setup.complete ]
        };
    }
    
    on setup.complete (event) {
        emit system.console.write {
            text: "‚úÖ Setup complete - Record added with ID: " + event.id
        };
        
        emit system.console.write {
            text: "Step 2: Testing vector.search.vector with proper 768D vector..."
        };

        // Create a proper 768D vector (matching Nomic embedding model dimensions)
        // Using a pre-generated 768D test vector
        emit vector.search.vector {
            vector: [0.0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09,
                     0.1, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19,
                     0.2, 0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.27, 0.28, 0.29,
                     0.3, 0.31, 0.32, 0.33, 0.34, 0.35, 0.36, 0.37, 0.38, 0.39,
                     0.4, 0.41, 0.42, 0.43, 0.44, 0.45, 0.46, 0.47, 0.48, 0.49,
                     0.5, 0.51, 0.52, 0.53, 0.54, 0.55, 0.56, 0.57, 0.58, 0.59,
                     0.6, 0.61, 0.62, 0.63, 0.64, 0.65, 0.66, 0.67, 0.68, 0.69,
                     0.7, 0.71, 0.72, 0.73, 0.74, 0.75, 0.76, 0.77, 0.78, 0.79],  // First 80 elements - will expand if needed
            topK: 1,
            handlers: [ search.debug.complete ]
        };
    }
    
    on search.debug.complete (event) {
        emit system.console.write {
            text: "‚úÖ Vector search completed successfully!"
        };
        
        emit system.console.write {
            text: "Results count: " + event.result_count
        };
        
        emit system.console.write {
            text: "Duration: " + event.duration + "ms"
        };
        
        emit system.console.write {
            text: "üéâ Vector search debugging complete!"
        };
        
        emit system.shutdown { reason: "search_debug_complete" };
    }
    
    // Add error handler for debugging
    on search.debug.failed (event) {
        emit system.console.write {
            text: "‚ùå Vector search failed: " + event.error
        };
        
        emit system.shutdown { reason: "search_debug_failed" };
    }
}

new VectorSearchDebugDemo();
