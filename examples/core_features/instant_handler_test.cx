// 🧪 INSTANT HANDLER TEST
// Direct event emission with immediate feedback

conscious InstantValidator
{
    realize()
    {
        print("🧪 INSTANT HANDLER EXECUTION TEST");
        print("=================================");
        
        // Emit events directly and immediately
        print("⚡ Emitting validation.one...");
        emit validation.one, { message: "Instant test 1", source: "direct" };
        
        print("⚡ Emitting validation.two...");
        emit validation.two, { message: "Instant test 2", source: "direct" };
        
        print("⚡ Emitting validation.three...");
        emit validation.three, { message: "Instant test 3", source: "direct" };
        
        print("📊 All events emitted - checking for handler responses...");
        
        // Small delay to allow async processing
        await { reason: "Allow immediate handler processing", minDurationMs: 100, maxDurationMs: 500 };
        
        print("🏁 Test completed");
    }

    on validation.one (event)
    {
        print("✅ HANDLER ONE EXECUTED: " + event.message);
        print("  📍 Source: " + event.source);
    }

    on validation.two (event)
    {
        print("✅ HANDLER TWO EXECUTED: " + event.message);
        print("  📍 Source: " + event.source);
    }

    on validation.three (event)
    {
        print("✅ HANDLER THREE EXECUTED: " + event.message);
        print("  📍 Source: " + event.source);
        print("🎉 ALL HANDLERS WORKING PERFECTLY!");
    }
}

// Create and run test
new InstantValidator();

print("Press any key to exit...");
