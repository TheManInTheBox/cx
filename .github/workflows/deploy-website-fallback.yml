name: Deploy Website to Azure (Client Secret Fallback)

on:
  workflow_dispatch:
    inputs:
      use_client_secret:
        description: 'Use client secret authentication instead of federated identity'
        required: true
        default: true
        type: boolean

env:
  AZURE_SUBSCRIPTION_ID: '0ae2be9a-f470-4dfe-b2e0-b7e9726acdfb'
  AZURE_RESOURCE_GROUP: 'agilecloud-rg'
  AZURE_STORAGE_ACCOUNT: 'agilecloudwebsite'
  AZURE_CDN_PROFILE: 'agilecloud-cdn'
  AZURE_CDN_ENDPOINT: 'agilecloud-website'
  CUSTOM_DOMAIN: 'agilecloud.ai'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build website
      working-directory: ./website
      run: |
        # Create build directory
        mkdir -p dist
        
        # Copy public files
        cp -r public/* dist/
        
        # Copy assets
        cp -r assets dist/
        
        echo "✅ Website files copied to dist/"
        
    - name: Login to Azure (Client Secret)
      if: github.event.inputs.use_client_secret == 'true'
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Login to Azure (Federated Identity)
      if: github.event.inputs.use_client_secret != 'true'
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
    - name: Verify Azure Authentication
      run: |
        echo "Testing Azure authentication..."
        az account show
        echo "Available subscriptions:"
        az account list --output table
        
    - name: Create Azure Resources
      run: |
        # Create resource group if it doesn't exist
        az group create --name $AZURE_RESOURCE_GROUP --location "East US" --subscription $AZURE_SUBSCRIPTION_ID
        
        # Create storage account for static website hosting
        az storage account create \
          --name $AZURE_STORAGE_ACCOUNT \
          --resource-group $AZURE_RESOURCE_GROUP \
          --location "East US" \
          --sku Standard_LRS \
          --kind StorageV2 \
          --access-tier Hot \
          --subscription $AZURE_SUBSCRIPTION_ID
          
        # Enable static website hosting
        az storage blob service-properties update \
          --account-name $AZURE_STORAGE_ACCOUNT \
          --static-website \
          --404-document 404.html \
          --index-document index.html \
          --subscription $AZURE_SUBSCRIPTION_ID
          
    - name: Deploy to Azure Storage
      run: |
        # Get storage account key
        STORAGE_KEY=$(az storage account keys list \
          --account-name $AZURE_STORAGE_ACCOUNT \
          --resource-group $AZURE_RESOURCE_GROUP \
          --subscription $AZURE_SUBSCRIPTION_ID \
          --query "[0].value" -o tsv)
          
        # Upload files to $web container
        az storage blob upload-batch \
          --destination '$web' \
          --source website/dist \
          --account-name $AZURE_STORAGE_ACCOUNT \
          --account-key "$STORAGE_KEY" \
          --overwrite true
          
    - name: Setup Azure CDN
      run: |
        # Create CDN profile
        az cdn profile create \
          --name $AZURE_CDN_PROFILE \
          --resource-group $AZURE_RESOURCE_GROUP \
          --sku Standard_Microsoft \
          --subscription $AZURE_SUBSCRIPTION_ID || true
          
        # Get storage account primary web endpoint
        ORIGIN_URL=$(az storage account show \
          --name $AZURE_STORAGE_ACCOUNT \
          --resource-group $AZURE_RESOURCE_GROUP \
          --subscription $AZURE_SUBSCRIPTION_ID \
          --query "primaryEndpoints.web" -o tsv | sed 's|https://||' | sed 's|/$||')
          
        # Create CDN endpoint
        az cdn endpoint create \
          --name $AZURE_CDN_ENDPOINT \
          --profile-name $AZURE_CDN_PROFILE \
          --resource-group $AZURE_RESOURCE_GROUP \
          --origin $ORIGIN_URL \
          --origin-host-header $ORIGIN_URL \
          --subscription $AZURE_SUBSCRIPTION_ID || true
          
    - name: Get Website URLs
      run: |
        # Get the primary web endpoint
        WEBSITE_URL=$(az storage account show \
          --name $AZURE_STORAGE_ACCOUNT \
          --resource-group $AZURE_RESOURCE_GROUP \
          --subscription $AZURE_SUBSCRIPTION_ID \
          --query "primaryEndpoints.web" -o tsv)
          
        # Get CDN endpoint URL
        CDN_URL=$(az cdn endpoint show \
          --name $AZURE_CDN_ENDPOINT \
          --profile-name $AZURE_CDN_PROFILE \
          --resource-group $AZURE_RESOURCE_GROUP \
          --subscription $AZURE_SUBSCRIPTION_ID \
          --query "hostName" -o tsv 2>/dev/null || echo "CDN not configured")
          
        echo "🌐 Website URL: $WEBSITE_URL"
        echo "⚡ CDN URL: https://$CDN_URL"
        echo "🚀 Deployment completed successfully!"
        echo ""
        echo "📋 Next Steps:"
        echo "1. Configure DNS CNAME: agilecloud.ai -> $CDN_URL"
        echo "2. Enable HTTPS certificate in Azure CDN"
        echo "3. Test the website at all URLs"
